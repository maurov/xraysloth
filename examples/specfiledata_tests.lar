#LARCH script to test the specfile_reader plugin

#tested for plugin version 0.2.2

fname = "specfiledata_tests.dat"
counter = "arr_hdh_ene"
signal = "zap_det_dtc"
monitor = "arr_I02sum"
seconds = "arr_seconds"
scan = 3

_next = input("Test 'read_specfile_scan' (y/n)? ")
if _next == 'y':
    for norm in [None, "area", "max-min", "sum"]:
        g1 = read_specfile_scan(fname, scan=scan, cntx=counter, csig=signal, cmon=monitor, csec=seconds, norm=norm)
        print("Read scan {0} with normalization {1}".format(scan, norm))
        newplot(g1.x, g1.y, win=1, title='read_specfile_scan : read a single scan from SPEC file', xlabel=g1.infos["xlabel"], ylabel=g1.infos["ylabel"])
        #raw_input("Press Enter to continue")
    #endfor
#endif

_next = input("Test 'read_specfile_map' (y/n)? ")
if _next == 'y':
    motor = 'Spec.Energy'
    rngstr = '5:70'
    xystep = 0.05
    g2 = read_specfile_map(fname, scans=rngstr, cntx=counter, cnty=motor, csig=signal, cmon=monitor, csec=seconds, xystep=xystep)
    contour(g2.zz, x=g2.x, y=g2.y, colormap='Spectral', nlevels=200, win=2, title='read_specfile_map : read many scans from SPEC file')
#endif

_next = input("Test 'read_specfile_mrg' (y/n)? ")
if _next == 'y':
    rngstr = '72, 74'
    norm = 'area'
    g2 = read_specfile_mrg(fname, scans=rngstr, cntx=counter, csig=signal, cmon=monitor, csec=seconds, norm=norm)
    newplot(g2.xmrg, g2.ymrg, win=1, title='read_specfile_mrg : merge many scans from SPEC file')
#endif
